pry-doc:
  commands: [ 'enhanced ?', 'enhanced $' ]
  desc: >-
    Allows you to look into the Ruby builtin classes with the ? and $ commands.
  use cases:
    - '? [].pop'
    - '$ [].pop'
    - …etc.
  url: http://banisterfiend.wordpress.com/

pry-docmore:
  commands: ['show-docmores', 'enhanced ?']
  desc: >-
    Shows docs for dollar-vars and keywords
  use cases:
    - "show-docmores"
    - "? module"
    - "? $`"
  url: https://github.com/rking/pry-docmore/wiki

pry-debugger:
  commands: [ break, breakpoints, next, step, finish, continue ]
  desc: >-
    An essential gem. Turns Pry into a steppable debugger.
  use cases:
    - Making the basic "require'pry';binding.pry" from a script come alive.
    - In conjunction with plymouth or pry-rescue, to explore failing tests.
    - Following calls into other libs.
  url: https://github.com/banister/pry-debugger#readme

pry-stack_explorer:
  commands: [ show-stack, up, down, frame ]
  use cases:
    - So many. TODO = document some.
  desc: Allows you to navigate the call stack.
  url: https://github.com/pry/pry-stack_explorer#readme

pry-exception_explorer:
  commands: [ enter-exception, continue-exception, exit-exception ]
  desc: >-
    Somewhat of a competitor to pry-rescue, but implemented differently.
    Currently doesn't work on C exceptions (such as `1/0` errors).
  use cases:
    - Let an exception happen in the REPL, then use enter-exception to find it.
    - Inline-style trap
    - Block wrapper-style trap
    - http://vimeo.com/36061298 ← "mini screencast"
  url: https://github.com/pry/pry-exception_explorer#readme

pry-rescue:
  commands: [ try-again, cd-cause ]
  desc: Provides `Pry.rescue do … end` to capture any exceptions and start pry
    from the context of the source of the exception.
  use cases:
    - Shortens write-run-debug cycles when exceptions are involved.
    - Exploring causes of hard-to-replicate exceptions.
    - Rescues on test failure via `require` of `pry-rescue/minitest` and `pry-rescue/rspec`
  url: https://github.com/ConradIrwin/pry-rescue#readme

bond:
  desc: >-
    An excellent tabcompletion gem. Having this dep enables new Pry stuff.
    Note that pry v0.9.10 doesn't have this feature, so you must use a repo
    version.
  use cases:
    - "`require 'x<tab>`"
    - "`{asdf: 1, hjkl: 2}[:a<tab>`"
    - "`Chain.of.calls.`<tab> # Old pry completion was generic in this case."
  url: http://tagaholic.me/bond/

jist:
  commands: [ jist, 'enhanced gist' ]
  desc: Replacement for the undermaintained `gist` gem.
  use cases:
    - Improved implementation for Pry's `gist` command.
    - Check out the `jist -h` output on the CLI, by the way.
  url: https://github.com/ConradIrwin/jist#readme
